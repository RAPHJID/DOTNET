@page "/mybids"
<main class="bids-content">
<div class="container mt-5 bg-light p-4">
    <h3 class="text-dark mb-4">Bids Made by @currentUser</h3>

    @if (userBids.Any())
    {
        <table class="table table-dark table-striped">
            <thead>
                <tr>
                    <th scope="col">Art Name</th>
                    <th scope="col">Bid Amount</th>
                        <th scope="col">Bid Status</th>

                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var (art, bidAmount) in userBids)
                {
                    <tr>
                        <td>@art.Name</td>
                        <td>@bidAmount</td>
                        <td>Active</td>
                      
                        <td>
                            <button class="btn btn-danger" @onclick="() => DeleteBid(art, bidAmount)">
                                <i class="bi bi-trash"></i> Delete Bid
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-muted">No bids made by @currentUser.</p>
    }
</div>



@code {
    List<User> users;
    List<Art> arts;
    List<(User, Art, int)> bids;
    string currentUser = "User1";

    List<(Art, int)> userBids;
    List<(Art, int)> deletedBids = new List<(Art, int)>();


    protected override void OnInitialized()
    {
        // Initialize users, arts, and bids here
        users = new List<User>
        {
            new User { Username = "User1" }
           
        };

        arts = new List<Art>
        {
            new Art { Name = "MonaLifta", CurrentBid = 80000 },
            new Art { Name = "The Persistence of Memory", CurrentBid = 30000 },
            new Art { Name = "Starry Night", CurrentBid = 12000 }
        };

        bids = new List<(User, Art, int)>
        {
            (users[0], arts[0], 80000),
            (users[0], arts[1], 30000),
            (users[0], arts[2], 12000)
        };

        // Initialize userBids
       userBids = bids
            .Where(b => b.Item1.Username == currentUser)
            .Select(b => (b.Item2, b.Item3))
            .ToList();
    }
        void DeleteBid(Art art, int bidAmount)
        {
            userBids = userBids.Where(b => !(b.Item1 == art && b.Item2 == bidAmount)).ToList();
            deletedBids.Add((art, bidAmount));
        }
}
</main>